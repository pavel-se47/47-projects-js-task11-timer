{"mappings":"AAAA,MAAMA,EAASC,SAASC,cAAc,eAChCC,EAASF,SAASC,cAAc,uBAChCE,EAAUH,SAASC,cAAc,wBACjCG,EAASJ,SAASC,cAAc,uBAChCI,EAASL,SAASC,cAAc,uBAoBtC,MAAMK,EAAoBC,IAMjB,C,KALMC,KAAKC,MAAMF,EAAQ,O,MAClBC,KAAKC,MAAMF,EAAS,MAAyB,M,KAC9CC,KAAKC,MAAMF,EAAS,KAAoB,K,KACxCC,KAAKC,MAAMF,EAAS,IAAc,OAYhC,IAlCjB,MAOEG,gBACEX,EAAOY,kBAAkBC,aAAa,KAAMC,KAAKC,UACjDC,aAAY,KACV,MAAMC,EAAcC,KAAKC,MACnBC,EAAYN,KAAKO,WAAaJ,EAC9BT,EAAOD,EAAkBa,GAC/BN,KAAKQ,OAAOd,EAAK,GAChB,I,CAbLe,aAAYD,OAAEA,EAAMP,SAAEA,EAAQM,WAAEA,IAC9BP,KAAKQ,OAASA,EACdR,KAAKC,SAAWA,EAChBD,KAAKO,WAAaA,C,GA8Bc,CAClCC,OARsB,EAACE,KAAEA,EAAIC,MAAEA,EAAKC,KAAEA,EAAIC,KAAEA,MAC5CxB,EAAOyB,YAAc,GAAGJ,IACxBpB,EAAQwB,YAAc,GAAGH,IACzBpB,EAAOuB,YAAc,GAAGF,IACxBpB,EAAOsB,YAAc,GAAGD,GAAM,EAK9BZ,SAAU,WACVM,WAAY,IAAIH,KAAK,kBAGdP","sources":["src/index.js"],"sourcesContent":["const bodyEl = document.querySelector('#main-timer');\r\nconst daysEl = document.querySelector('[data-value=\"days\"]');\r\nconst hoursEl = document.querySelector('[data-value=\"hours\"]');\r\nconst minsEl = document.querySelector('[data-value=\"mins\"]');\r\nconst secsEl = document.querySelector('[data-value=\"secs\"]');\r\n\r\nclass CountdownTimer {\r\n  constructor({ onTick, selector, targetDate }) {\r\n    this.onTick = onTick;\r\n    this.selector = selector;\r\n    this.targetDate = targetDate;\r\n  }\r\n\r\n  remainingTime() {\r\n    bodyEl.firstElementChild.setAttribute('id', this.selector);\r\n    setInterval(() => {\r\n      const currentDate = Date.now();\r\n      const deltaTime = this.targetDate - currentDate;\r\n      const time = getTimeComponents(deltaTime);\r\n      this.onTick(time);\r\n    }, 1000);\r\n  }\r\n}\r\n\r\nconst getTimeComponents = time => {\r\n  const days = Math.floor(time / (1000 * 60 * 60 * 24));\r\n  const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n  const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\r\n  const secs = Math.floor((time % (1000 * 60)) / 1000);\r\n\r\n  return { days, hours, mins, secs };\r\n};\r\n\r\nconst updateClockFace = ({ days, hours, mins, secs }) => {\r\n  daysEl.textContent = `${days}`;\r\n  hoursEl.textContent = `${hours}`;\r\n  minsEl.textContent = `${mins}`;\r\n  secsEl.textContent = `${secs}`;\r\n};\r\n\r\nconst timerOne = new CountdownTimer({\r\n  onTick: updateClockFace,\r\n  selector: '#timer-1',\r\n  targetDate: new Date('Jul 17, 2023'),\r\n});\r\n\r\ntimerOne.remainingTime();\r\n\r\n// const timerTwo = new CountdownTimer({\r\n//   onTick: updateClockFace,\r\n//   selector: '#timer-2',\r\n//   targetDate: new Date('Jul 25, 2024'),\r\n// });\r\n\r\n// timerTwo.remainingTime();\r\n"],"names":["$1f0dc3b9307be026$var$bodyEl","document","querySelector","$1f0dc3b9307be026$var$daysEl","$1f0dc3b9307be026$var$hoursEl","$1f0dc3b9307be026$var$minsEl","$1f0dc3b9307be026$var$secsEl","$1f0dc3b9307be026$var$getTimeComponents","time","Math","floor","remainingTime","firstElementChild","setAttribute","this","selector","setInterval","currentDate","Date","now","deltaTime","targetDate","onTick","constructor","days","hours","mins","secs","textContent"],"version":3,"file":"index.8951a94f.js.map"}